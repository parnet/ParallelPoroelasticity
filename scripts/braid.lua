---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by parnet.
--- DateTime: 02.06.21 09:42
---

ug_load_script("ug_util.lua")
ug_load_script("xbraid_util.lua") -- load neccessary XBraid lua interfaces

XARGS = {
    num_spatial_procs = util.GetParamNumber("--np-x", 1, "number of spatial procs (must divide totalproc number)"),  -- numSpatialProcs * numTimeProcs = numGlobalProcs
    p_coarseningStrategy = util.GetParamNumber("--coarsening-strategy", 1, " see list below for specific coarsening strategies"),
    p_max_iter = util.GetParamNumber("--maxiter", 100, " maximum number of iterations"),
    p_max_level = util.GetParamNumber("--maxlevel", 15, " maximum number of levels"),
    p_cycle = util.GetParam("--cycle", "V", " cycletype V-Cycle or F-Cycle "),
    p_relaxation = util.GetParam("--cycle", "FCF", "relaxation type FCF, F-FCF or F-relaxation"),
    -- p_useResidual = util.GetParamNumber("-useResidual", 0, " 0 use residual, 1 xbraid residual"),
    -- p_adaptiveSolver = util.GetParamNumber("-adaptiveSolver", 0, " use a tight and a loose tol for solving"),
    -- p_solver = util.GetParamNumber("-solver", 0, "see list below; 0 for GMG(V,1,1,jac(0.66))[reduction], 1 for GMG(V,1,1, ilu)[absolute]"),
    -- p_strongfirst = util.GetParamNumber("-first", 0, " Use a high accuracy in the first iteration"),
    -- alpha = util.GetParamNumber("-alpha", 0.1, " diffusion constant (default: 0.1)"),
}

num_world_ranks = NumProcs()
space_time_communicator = SpaceTimeCommunicator()

if num_world_ranks % XARGS.num_spatial_procs == 0 then
    space_time_communicator:split(XARGS.num_spatial_procs)
    num_temporal_procs = num_world_ranks / XARGS.num_spatial_procs;
    print("Using: " .. num_temporal_procs .. " of " .. num_world_ranks .. " for spatial")
else
    xCommunicator:split(1)
    print("Using: " .. 1 .. " of " .. num_world_ranks .. " for spatial") -- todo exit?
end


InitUG(2,AlgebraType("CPU",1))

braid = xbraid_util.CreateBraidIntegrator(braid_integration_desc,space_time_communicator)
braid:apply(u,endTime,u,startTime)